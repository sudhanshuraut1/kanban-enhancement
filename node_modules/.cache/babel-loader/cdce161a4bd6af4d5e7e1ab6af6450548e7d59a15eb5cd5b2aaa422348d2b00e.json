{"ast":null,"code":"var _jsxFileName = \"/Users/sudhanshuraut1/kanban-Enhanced/kanban-enhancement/src/pages/kanbanBoard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Modal } from \"antd\";\nimport KanbanColumn from \"../temp/KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  job\n}) => {\n  _s();\n  const [stages, setStages] = useState([]);\n  const [jobCandidates, setJobCandidates] = useState([]);\n  useEffect(() => {\n    fetch(\"/hiring_pipeline.json\").then(response => response.json()).then(data => {\n      const jobPipeline = data.jobs.find(pipeline => pipeline.job_title === job);\n\n      // Filter only top-level stages (ignoring sub-stages)\n      const filteredStages = jobPipeline.pipeline.filter(stage => !stage.parent_progress_id);\n      setStages(filteredStages);\n    }).catch(error => console.error(\"Error loading pipeline:\", error));\n    fetch(\"/candidates.json\").then(response => response.json()).then(data => {\n      console.log(\"Fetched Candidates:\", data);\n      const currentJobCandidates = data.candidates.filter(candidate => candidate.applied_jobs.some(canJob => canJob.job_title === job));\n      console.log(\"Filtered Candidates:\", currentJobCandidates);\n      setJobCandidates(currentJobCandidates);\n    }).catch(error => console.error(\"error fetching candidates\", error));\n  }, [job]);\n  const onDragStart = (e, candidateId) => {\n    console.log(\"Dragging candidate ID:\", candidateId);\n    e.dataTransfer.setData(\"candidateId\", candidateId);\n  };\n  const onDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log(\"Dragging over a droppable area\");\n  };\n  const onDrop = (e, newStatus) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const candidateId = e.dataTransfer.getData(\"candidateId\");\n    console.log(\"Dropped Candidate ID:\", candidateId);\n    if (!candidateId) {\n      console.warn(\"No candidate ID found in drag data\");\n      return;\n    }\n    const targetStage = stages.find(stage => stage.progress_code === newStatus);\n    console.log(\"Target Stage:\", targetStage);\n    if (!targetStage) {\n      console.warn(\"No target stage found\");\n      return;\n    }\n    if (targetStage.restricted) {\n      console.log(\"Restricted stage detected. Showing confirmation modal...\");\n      Modal.confirm({\n        title: \"Restricted Stage\",\n        content: \"This stage is restricted. Are you sure you want to move the candidate?\",\n        okText: \"Yes, Move\",\n        cancelText: \"Cancel\",\n        onOk: () => {\n          console.log(\"Candidate moved after confirmation!\");\n          setJobCandidates(prevCandidates => prevCandidates.map(candidate => candidate.id === candidateId ? {\n            ...candidate,\n            progress: newStatus\n          } : candidate));\n        },\n        onCancel: () => {\n          console.log(\"Move cancelled\");\n        }\n      });\n    } else {\n      console.log(\"Candidate moved to\", newStatus);\n      setJobCandidates(prevCandidates => prevCandidates.map(candidate => candidate.id === candidateId ? {\n        ...candidate,\n        progress: newStatus\n      } : candidate));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      gap: \"10px\",\n      overflowX: \"auto\",\n      padding: \"10px\"\n    },\n    children: stages.map(stage => {\n      const filteredCandidates = jobCandidates.filter(candidate => candidate.progress === stage.progress_code);\n      return /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        stageCode: stage.progress_code,\n        title: stage.progress_label,\n        candidates: filteredCandidates,\n        onDrop: onDrop,\n        onDragOver: onDragOver,\n        onDragStart: onDragStart,\n        style: {\n          minWidth: \"250px\",\n          backgroundColor: stage.progress_color_code\n        }\n      }, stage.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"4XOSPHOhcOd6wIn5ILm0UFxLfvk=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["useEffect","useState","Modal","KanbanColumn","jsxDEV","_jsxDEV","KanbanBoard","job","_s","stages","setStages","jobCandidates","setJobCandidates","fetch","then","response","json","data","jobPipeline","jobs","find","pipeline","job_title","filteredStages","filter","stage","parent_progress_id","catch","error","console","log","currentJobCandidates","candidates","candidate","applied_jobs","some","canJob","onDragStart","e","candidateId","dataTransfer","setData","onDragOver","preventDefault","stopPropagation","onDrop","newStatus","getData","warn","targetStage","progress_code","restricted","confirm","title","content","okText","cancelText","onOk","prevCandidates","map","id","progress","onCancel","style","display","gap","overflowX","padding","children","filteredCandidates","stageCode","progress_label","minWidth","backgroundColor","progress_color_code","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sudhanshuraut1/kanban-Enhanced/kanban-enhancement/src/pages/kanbanBoard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Modal } from \"antd\";\nimport KanbanColumn from \"../temp/KanbanColumn\";\n\nconst KanbanBoard = ({job}) => {\n  const [stages, setStages] = useState([]);\n  const [jobCandidates , setJobCandidates] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/hiring_pipeline.json\") \n      .then((response) => response.json())\n      .then((data) => {\n      \n        const jobPipeline = data.jobs.find(pipeline => pipeline.job_title === job);\n        \n        // Filter only top-level stages (ignoring sub-stages)\n        const filteredStages = jobPipeline.pipeline.filter(stage => !stage.parent_progress_id);\n        setStages(filteredStages);\n      })\n      .catch((error) => console.error(\"Error loading pipeline:\", error));\n\n      fetch(\"/candidates.json\").then((response) => response.json()).then((data)=>{\n        console.log(\"Fetched Candidates:\", data);\n        const currentJobCandidates = data.candidates.filter(candidate => \n            candidate.applied_jobs.some(canJob => canJob.job_title === job)\n          );\n          \n        console.log(\"Filtered Candidates:\", currentJobCandidates);\n        setJobCandidates(currentJobCandidates);\n      }).catch((error) => console.error(\"error fetching candidates\",error));\n  }, [job]); \n    \n  const onDragStart = (e, candidateId) => {\n    console.log(\"Dragging candidate ID:\", candidateId);\n    e.dataTransfer.setData(\"candidateId\", candidateId);\n};\n\n  const onDragOver = (e) => {   \n    e.preventDefault();\n    e.stopPropagation();\n    console.log(\"Dragging over a droppable area\");\n};\n\n\nconst onDrop = (e, newStatus) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const candidateId = e.dataTransfer.getData(\"candidateId\");\n    console.log(\"Dropped Candidate ID:\", candidateId);\n    if (!candidateId) {\n        console.warn(\"No candidate ID found in drag data\");\n        return;\n    }\n\n    const targetStage = stages.find(stage => stage.progress_code === newStatus);\n    console.log(\"Target Stage:\", targetStage);\n\n    if (!targetStage) {\n        console.warn(\"No target stage found\");\n        return;\n    }\n\n    if (targetStage.restricted) {\n        console.log(\"Restricted stage detected. Showing confirmation modal...\");\n        Modal.confirm({\n            title: \"Restricted Stage\",\n            content: \"This stage is restricted. Are you sure you want to move the candidate?\",\n            okText: \"Yes, Move\",\n            cancelText: \"Cancel\",\n            onOk: () => {\n                console.log(\"Candidate moved after confirmation!\");\n                setJobCandidates((prevCandidates) =>\n                    prevCandidates.map((candidate) =>\n                        candidate.id === candidateId ? { ...candidate, progress: newStatus } : candidate\n                    )\n                );\n            },\n            onCancel: () => {\n                console.log(\"Move cancelled\");\n            }\n        });\n    } else {\n        console.log(\"Candidate moved to\", newStatus);\n        setJobCandidates((prevCandidates) =>\n            prevCandidates.map((candidate) =>\n                candidate.id === candidateId ? { ...candidate, progress: newStatus } : candidate\n            )\n        );\n    }\n};\n\n\n\n\n  return (\n    <div style={{ display: \"flex\", gap: \"10px\", overflowX: \"auto\", padding: \"10px\" }}>\n      {stages.map((stage) => {\n  const filteredCandidates = jobCandidates.filter(candidate => candidate.progress === stage.progress_code);\n  return (\n    <KanbanColumn \n      key={stage.id} \n      stageCode={stage.progress_code}\n      title={stage.progress_label} \n      candidates={filteredCandidates} \n      onDrop={onDrop}\n      onDragOver={onDragOver}\n      onDragStart={onDragStart}\n      style={{ minWidth: \"250px\", backgroundColor: stage.progress_color_code }}\n    />\n  );\n})}\n    </div>\n  );\n};\n\nexport default KanbanBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}