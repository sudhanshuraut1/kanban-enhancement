{"ast":null,"code":"var _jsxFileName = \"/Users/sudhanshuraut1/kanban-poc/src/App.js\",\n  _s = $RefreshSig$();\nimport './Kanban.css';\nimport React, { useState } from \"react\";\nimport KanbanColumn from \"./temp/KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: \"1\",\n    title: \"Task 1\"\n  }, {\n    id: \"2\",\n    title: \"Task 2\"\n  }, {\n    id: \"3\",\n    title: \"Task 3\"\n  }, {\n    id: \"4\",\n    title: \"Task 4\"\n  }, {\n    id: \"5\",\n    title: \"Task 5\"\n  }]);\n  const onDragStart = (e, taskId) => {\n    e.dataTransfer.setData(\"taskId\", taskId);\n  };\n  const onDragOver = e => {\n    e.preventDefault(); // Necessary to allow dropping\n  };\n  const onDrop = (e, newStatus) => {\n    const taskId = e.dataTransfer.getData(\"taskId\");\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      status: newStatus\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: [/*#__PURE__*/_jsxDEV(KanbanColumn, {\n      title: \"Resume Shortlisted\",\n      tasks: tasks.filter(task => task.status === \"Resume Shortlisted\"),\n      onDrop: onDrop,\n      onDragOver: onDragOver,\n      onDragStart: onDragStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n      title: \"In Progress\",\n      tasks: tasks.filter(task => task.status === \"Assessment passed\"),\n      onDrop: onDrop,\n      onDragOver: onDragOver,\n      onDragStart: onDragStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n      title: \"Done\",\n      tasks: tasks.filter(task => task.status === \"1st interview passed\"),\n      onDrop: onDrop,\n      onDragOver: onDragOver,\n      onDragStart: onDragStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n      title: \"Done\",\n      tasks: tasks.filter(task => task.status === \"final interview passed\"),\n      onDrop: onDrop,\n      onDragOver: onDragOver,\n      onDragStart: onDragStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n      title: \"Done\",\n      tasks: tasks.filter(task => task.status === \"job offered\"),\n      onDrop: onDrop,\n      onDragOver: onDragOver,\n      onDragStart: onDragStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TDg0HY2iAYXvkyY/xN1utC1BuFQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","KanbanColumn","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","id","title","onDragStart","e","taskId","dataTransfer","setData","onDragOver","preventDefault","onDrop","newStatus","getData","prevTasks","map","task","status","className","children","filter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sudhanshuraut1/kanban-poc/src/App.js"],"sourcesContent":["import './Kanban.css';\nimport React, { useState } from \"react\";\nimport KanbanColumn from \"./temp/KanbanColumn\";\n\n\n\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    { id: \"1\", title: \"Task 1\"},\n    { id: \"2\", title: \"Task 2\"},\n    { id: \"3\", title: \"Task 3\"},\n    { id: \"4\", title: \"Task 4\"},\n    { id: \"5\", title: \"Task 5\"}\n  ]);\n\n  const onDragStart = (e, taskId) => {\n    e.dataTransfer.setData(\"taskId\", taskId);\n  };\n\n  const onDragOver = (e) => {\n    e.preventDefault(); // Necessary to allow dropping\n  };\n\n  const onDrop = (e, newStatus) => {\n    const taskId = e.dataTransfer.getData(\"taskId\");\n\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === taskId ? { ...task, status: newStatus } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"kanban-board\">\n      <KanbanColumn\n        title=\"Resume Shortlisted\"\n        tasks={tasks.filter((task) => task.status === \"Resume Shortlisted\")}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        onDragStart={onDragStart}\n      />\n      <KanbanColumn\n        title=\"In Progress\"\n        tasks={tasks.filter((task) => task.status === \"Assessment passed\")}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        onDragStart={onDragStart}\n      />\n      <KanbanColumn\n        title=\"Done\"\n        tasks={tasks.filter((task) => task.status === \"1st interview passed\")}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        onDragStart={onDragStart}\n      />\n      <KanbanColumn\n        title=\"Done\"\n        tasks={tasks.filter((task) => task.status === \"final interview passed\")}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        onDragStart={onDragStart}\n      />\n      <KanbanColumn\n        title=\"Done\"\n        tasks={tasks.filter((task) => task.status === \"job offered\")}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        onDragStart={onDragStart}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CACjC;IAAEQ,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAC3B;IAAED,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAC3B;IAAED,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAC3B;IAAED,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAC3B;IAAED,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAQ,CAAC,CAC5B,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAACC,CAAC,EAAEC,MAAM,KAAK;IACjCD,CAAC,CAACE,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,MAAM,CAAC;EAC1C,CAAC;EAED,MAAMG,UAAU,GAAIJ,CAAC,IAAK;IACxBA,CAAC,CAACK,cAAc,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAACN,CAAC,EAAEO,SAAS,KAAK;IAC/B,MAAMN,MAAM,GAAGD,CAAC,CAACE,YAAY,CAACM,OAAO,CAAC,QAAQ,CAAC;IAE/CZ,QAAQ,CAAEa,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACd,EAAE,KAAKI,MAAM,GAAG;MAAE,GAAGU,IAAI;MAAEC,MAAM,EAAEL;IAAU,CAAC,GAAGI,IACxD,CACF,CAAC;EACH,CAAC;EAED,oBACEnB,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BtB,OAAA,CAACF,YAAY;MACXQ,KAAK,EAAC,oBAAoB;MAC1BH,KAAK,EAAEA,KAAK,CAACoB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAK,oBAAoB,CAAE;MACpEN,MAAM,EAAEA,MAAO;MACfF,UAAU,EAAEA,UAAW;MACvBL,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF3B,OAAA,CAACF,YAAY;MACXQ,KAAK,EAAC,aAAa;MACnBH,KAAK,EAAEA,KAAK,CAACoB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAK,mBAAmB,CAAE;MACnEN,MAAM,EAAEA,MAAO;MACfF,UAAU,EAAEA,UAAW;MACvBL,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF3B,OAAA,CAACF,YAAY;MACXQ,KAAK,EAAC,MAAM;MACZH,KAAK,EAAEA,KAAK,CAACoB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAK,sBAAsB,CAAE;MACtEN,MAAM,EAAEA,MAAO;MACfF,UAAU,EAAEA,UAAW;MACvBL,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF3B,OAAA,CAACF,YAAY;MACXQ,KAAK,EAAC,MAAM;MACZH,KAAK,EAAEA,KAAK,CAACoB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAK,wBAAwB,CAAE;MACxEN,MAAM,EAAEA,MAAO;MACfF,UAAU,EAAEA,UAAW;MACvBL,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF3B,OAAA,CAACF,YAAY;MACXQ,KAAK,EAAC,MAAM;MACZH,KAAK,EAAEA,KAAK,CAACoB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAK,aAAa,CAAE;MAC7DN,MAAM,EAAEA,MAAO;MACfF,UAAU,EAAEA,UAAW;MACvBL,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CAlEID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAoET,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}