{"ast":null,"code":"var _jsxFileName = \"/Users/sudhanshuraut1/kanban-Enhanced/kanban-enhancement/src/pages/kanbanBoard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\n//import { Card } from \"antd\";\nimport KanbanColumn from \"../temp/KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  job\n}) => {\n  _s();\n  const [stages, setStages] = useState([]);\n  const [jobCandidates, setJobCandidates] = useState([]);\n  useEffect(() => {\n    fetch(\"/hiring_pipeline.json\").then(response => response.json()).then(data => {\n      const jobPipeline = data.jobs.find(pipeline => pipeline.job_title === job);\n\n      // Filter only top-level stages (ignoring sub-stages)\n      const filteredStages = jobPipeline.pipeline.filter(stage => !stage.parent_progress_id);\n      setStages(filteredStages);\n    }).catch(error => console.error(\"Error loading pipeline:\", error));\n    fetch(\"/candidates.json\").then(response => response.json()).then(data => {\n      console.log(\"Fetched Candidates:\", data);\n      const currentJobCandidates = data.candidates.filter(candidate => candidate.applied_jobs.some(canJob => canJob.job_title === job));\n      console.log(\"Filtered Candidates:\", currentJobCandidates);\n      setJobCandidates(currentJobCandidates);\n    }).catch(error => console.error(\"error fetching candidates\", error));\n  }, [job]);\n  const onDragStart = (e, candidateId) => {\n    e.dataTransfer.setData(\"candidateId\", candidateId);\n  };\n  const onDragOver = e => {\n    e.preventDefault();\n  };\n  const onDrop = (e, newStatus) => {\n    const candidateId = e.dataTransfer.getData(\"candidateId\");\n    if (stages.find(stage => stage.progress_code === newStatus).restricted) {\n      alert(\"hi there this is restricted one\");\n    }\n    setJobCandidates(prevCandidates => prevCandidates.map(candidate => candidate.id === candidateId ? {\n      ...candidate,\n      progress: newStatus\n    } : candidate));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      gap: \"10px\",\n      overflowX: \"auto\",\n      padding: \"10px\"\n    },\n    children: stages.map(stage => {\n      const filteredCandidates = jobCandidates.filter(candidate => candidate.progress === stage.progress_code);\n      return /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        stageCode: stage.progress_code,\n        title: stage.progress_label,\n        candidates: filteredCandidates,\n        onDrop: onDrop,\n        onDragOver: onDragOver,\n        onDragStart: onDragStart,\n        style: {\n          minWidth: \"250px\",\n          backgroundColor: stage.progress_color_code\n        }\n      }, stage.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"4XOSPHOhcOd6wIn5ILm0UFxLfvk=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["useEffect","useState","KanbanColumn","jsxDEV","_jsxDEV","KanbanBoard","job","_s","stages","setStages","jobCandidates","setJobCandidates","fetch","then","response","json","data","jobPipeline","jobs","find","pipeline","job_title","filteredStages","filter","stage","parent_progress_id","catch","error","console","log","currentJobCandidates","candidates","candidate","applied_jobs","some","canJob","onDragStart","e","candidateId","dataTransfer","setData","onDragOver","preventDefault","onDrop","newStatus","getData","progress_code","restricted","alert","prevCandidates","map","id","progress","style","display","gap","overflowX","padding","children","filteredCandidates","stageCode","title","progress_label","minWidth","backgroundColor","progress_color_code","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sudhanshuraut1/kanban-Enhanced/kanban-enhancement/src/pages/kanbanBoard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n//import { Card } from \"antd\";\nimport KanbanColumn from \"../temp/KanbanColumn\";\n\nconst KanbanBoard = ({job}) => {\n  const [stages, setStages] = useState([]);\n  const [jobCandidates , setJobCandidates] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/hiring_pipeline.json\") \n      .then((response) => response.json())\n      .then((data) => {\n      \n        const jobPipeline = data.jobs.find(pipeline => pipeline.job_title === job);\n        \n        // Filter only top-level stages (ignoring sub-stages)\n        const filteredStages = jobPipeline.pipeline.filter(stage => !stage.parent_progress_id);\n        setStages(filteredStages);\n      })\n      .catch((error) => console.error(\"Error loading pipeline:\", error));\n\n      fetch(\"/candidates.json\").then((response) => response.json()).then((data)=>{\n        console.log(\"Fetched Candidates:\", data);\n        const currentJobCandidates = data.candidates.filter(candidate => \n            candidate.applied_jobs.some(canJob => canJob.job_title === job)\n          );\n          \n        console.log(\"Filtered Candidates:\", currentJobCandidates);\n        setJobCandidates(currentJobCandidates);\n      }).catch((error) => console.error(\"error fetching candidates\",error));\n  }, [job]); \n    \n  const onDragStart = (e, candidateId) => {\n    e.dataTransfer.setData(\"candidateId\", candidateId);\n  };\n\n  const onDragOver = (e) => {   \n    e.preventDefault();         \n  };\n\n  const onDrop = (e, newStatus) => {\n    const candidateId = e.dataTransfer.getData(\"candidateId\");\n     if (stages.find(stage => stage.progress_code === newStatus).restricted){\n        alert(\"hi there this is restricted one\")\n     }\n    setJobCandidates((prevCandidates) =>\n      prevCandidates.map((candidate) =>\n        candidate.id === candidateId ? { ...candidate, progress: newStatus } : candidate\n      )\n    );\n  };\n\n\n  return (\n    <div style={{ display: \"flex\", gap: \"10px\", overflowX: \"auto\", padding: \"10px\" }}>\n      {stages.map((stage) => {\n  const filteredCandidates = jobCandidates.filter(candidate => candidate.progress === stage.progress_code);\n  return (\n    <KanbanColumn \n      key={stage.id} \n      stageCode={stage.progress_code}\n      title={stage.progress_label} \n      candidates={filteredCandidates} \n      onDrop={onDrop}\n      onDragOver={onDragOver}\n      onDragStart={onDragStart}\n      style={{ minWidth: \"250px\", backgroundColor: stage.progress_color_code }}\n    />\n  );\n})}\n    </div>\n  );\n};\n\nexport default KanbanBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}