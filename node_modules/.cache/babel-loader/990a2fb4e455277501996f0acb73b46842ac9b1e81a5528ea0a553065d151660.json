{"ast":null,"code":"var _jsxFileName = \"/Users/sudhanshuraut1/kanban-Enhanced/kanban-enhancement/src/pages/kanbanBoard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { Modal } from \"antd\";\nimport KanbanColumn from \"../temp/KanbanColumn\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  job\n}) => {\n  _s();\n  const [stages, setStages] = useState([]);\n  const [jobCandidates, setJobCandidates] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [pendingCandidate, setPendingCandidate] = useState(null);\n  const [pendingStatus, setPendingStatus] = useState(null);\n  const scrollContainerRef = useRef(null);\n  const scrollbarRef = useRef(null);\n  useEffect(() => {\n    fetch(\"/hiring_pipeline.json\").then(response => response.json()).then(data => {\n      const jobPipeline = data.jobs.find(pipeline => pipeline.job_title === job);\n      const filteredStages = jobPipeline.pipeline.filter(stage => !stage.parent_progress_id);\n      setStages(filteredStages);\n    }).catch(error => console.error(\"Error loading pipeline:\", error));\n    fetch(\"/candidates.json\").then(response => response.json()).then(data => {\n      const currentJobCandidates = data.candidates.filter(candidate => candidate.applied_jobs.some(canJob => canJob.job_title === job));\n      setJobCandidates(currentJobCandidates);\n    }).catch(error => console.error(\"error fetching candidates\", error));\n  }, [job]);\n  const onDragStart = (e, candidateId) => {\n    console.log(\"Dragging candidate ID:\", candidateId);\n    e.dataTransfer.setData(\"candidateId\", candidateId);\n  };\n  const onDragOver = e => {\n    e.preventDefault();\n    console.log(\"Dragging over a droppable area\");\n  };\n  const onDrop = (e, newStatus) => {\n    const candidateId = e.dataTransfer.getData(\"candidateId\");\n    const targetStage = stages.find(stage => stage.progress_code === newStatus);\n    if (!targetStage) return;\n    if (targetStage.restricted) {\n      console.log(\"Restricted stage, modal should be visible\");\n      setPendingCandidate(candidateId);\n      setPendingStatus(newStatus);\n      setModalVisible(true);\n      return;\n    }\n    moveCandidate(candidateId, newStatus);\n  };\n  const moveCandidate = (candidateId, newStatus) => {\n    setJobCandidates(prevCandidates => prevCandidates.map(candidate => candidate.id === candidateId ? {\n      ...candidate,\n      progress: newStatus\n    } : candidate));\n    setModalVisible(false);\n  };\n  const syncScroll = e => {\n    if (scrollContainerRef.current) {\n      scrollContainerRef.current.scrollLeft = e.target.scrollLeft;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scrollContainerRef,\n      style: {\n        display: \"flex\",\n        gap: \"10px\",\n        overflowX: \"auto\",\n        padding: \"10px\",\n        whiteSpace: \"nowrap\",\n        scrollbarWidth: \"none\",\n        // Hide default scrollbar\n        msOverflowStyle: \"none\" // Hide scrollbar for IE/Edge\n      },\n      className: \"kanban-content\",\n      children: stages.map(stage => {\n        const filteredCandidates = jobCandidates.filter(candidate => candidate.progress === stage.progress_code);\n        return /*#__PURE__*/_jsxDEV(KanbanColumn, {\n          stageCode: stage.progress_code,\n          title: stage.progress_label,\n          candidates: filteredCandidates,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          onDragStart: onDragStart,\n          style: {\n            minWidth: \"250px\",\n            backgroundColor: stage.progress_color_code\n          }\n        }, stage.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scrollbarRef,\n      onScroll: syncScroll,\n      style: {\n        height: \"12px\",\n        width: \"100vw\",\n        overflowX: \"auto\",\n        position: \"fixed\",\n        bottom: \"0px\",\n        left: \"0px\",\n        zIndex: \"1000\",\n        background: \"rgba(0, 0, 0, 0.1)\",\n        borderRadius: \"6px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"200%\",\n          height: \"12px\",\n          background: \"#888\",\n          borderRadius: \"6px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Restricted Stage\",\n      open: modalVisible,\n      onOk: () => moveCandidate(pendingCandidate, pendingStatus),\n      onCancel: () => setModalVisible(false),\n      okText: \"Yes, Move\",\n      cancelText: \"Cancel\",\n      children: \"This stage is restricted. Are you sure you want to move the candidate?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(KanbanBoard, \"1w3zKs8VnAiTDcBaVy7UPptrGmw=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["useEffect","useState","useRef","Modal","KanbanColumn","jsxDEV","_jsxDEV","Fragment","_Fragment","KanbanBoard","job","_s","stages","setStages","jobCandidates","setJobCandidates","modalVisible","setModalVisible","pendingCandidate","setPendingCandidate","pendingStatus","setPendingStatus","scrollContainerRef","scrollbarRef","fetch","then","response","json","data","jobPipeline","jobs","find","pipeline","job_title","filteredStages","filter","stage","parent_progress_id","catch","error","console","currentJobCandidates","candidates","candidate","applied_jobs","some","canJob","onDragStart","e","candidateId","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","newStatus","getData","targetStage","progress_code","restricted","moveCandidate","prevCandidates","map","id","progress","syncScroll","current","scrollLeft","target","children","ref","style","display","gap","overflowX","padding","whiteSpace","scrollbarWidth","msOverflowStyle","className","filteredCandidates","stageCode","title","progress_label","minWidth","backgroundColor","progress_color_code","fileName","_jsxFileName","lineNumber","columnNumber","onScroll","height","width","position","bottom","left","zIndex","background","borderRadius","open","onOk","onCancel","okText","cancelText","_c","$RefreshReg$"],"sources":["/Users/sudhanshuraut1/kanban-Enhanced/kanban-enhancement/src/pages/kanbanBoard.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport { Modal } from \"antd\";\nimport KanbanColumn from \"../temp/KanbanColumn\";\n\nconst KanbanBoard = ({ job }) => {\n  const [stages, setStages] = useState([]);\n  const [jobCandidates, setJobCandidates] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [pendingCandidate, setPendingCandidate] = useState(null);\n  const [pendingStatus, setPendingStatus] = useState(null);\n  const scrollContainerRef = useRef(null);\n  const scrollbarRef = useRef(null);\n\n  useEffect(() => {\n    fetch(\"/hiring_pipeline.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        const jobPipeline = data.jobs.find((pipeline) => pipeline.job_title === job);\n        const filteredStages = jobPipeline.pipeline.filter((stage) => !stage.parent_progress_id);\n        setStages(filteredStages);\n      })\n      .catch((error) => console.error(\"Error loading pipeline:\", error));\n\n    fetch(\"/candidates.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        const currentJobCandidates = data.candidates.filter((candidate) =>\n          candidate.applied_jobs.some((canJob) => canJob.job_title === job)\n        );\n        setJobCandidates(currentJobCandidates);\n      })\n      .catch((error) => console.error(\"error fetching candidates\", error));\n  }, [job]);\n\n  const onDragStart = (e, candidateId) => {\n    console.log(\"Dragging candidate ID:\", candidateId);\n    e.dataTransfer.setData(\"candidateId\", candidateId);\n  };\n\n  const onDragOver = (e) => {\n    e.preventDefault();\n    console.log(\"Dragging over a droppable area\");\n  };\n\n  const onDrop = (e, newStatus) => {\n    const candidateId = e.dataTransfer.getData(\"candidateId\");\n\n    const targetStage = stages.find((stage) => stage.progress_code === newStatus);\n    if (!targetStage) return;\n\n    if (targetStage.restricted) {\n      console.log(\"Restricted stage, modal should be visible\");\n      setPendingCandidate(candidateId);\n      setPendingStatus(newStatus);\n      setModalVisible(true);\n      return;\n    }\n\n    moveCandidate(candidateId, newStatus);\n  };\n\n  const moveCandidate = (candidateId, newStatus) => {\n    setJobCandidates((prevCandidates) =>\n      prevCandidates.map((candidate) =>\n        candidate.id === candidateId ? { ...candidate, progress: newStatus } : candidate\n      )\n    );\n    setModalVisible(false);\n  };\n\n  const syncScroll = (e) => {\n    if (scrollContainerRef.current) {\n      scrollContainerRef.current.scrollLeft = e.target.scrollLeft;\n    }\n  };\n\n  return (\n    <>\n      <div\n        ref={scrollContainerRef}\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n          overflowX: \"auto\",\n          padding: \"10px\",\n          whiteSpace: \"nowrap\",\n          scrollbarWidth: \"none\", // Hide default scrollbar\n          msOverflowStyle: \"none\", // Hide scrollbar for IE/Edge\n        }}\n        className=\"kanban-content\"\n      >\n        {stages.map((stage) => {\n          const filteredCandidates = jobCandidates.filter(\n            (candidate) => candidate.progress === stage.progress_code\n          );\n          return (\n            <KanbanColumn\n              key={stage.id}\n              stageCode={stage.progress_code}\n              title={stage.progress_label}\n              candidates={filteredCandidates}\n              onDrop={onDrop}\n              onDragOver={onDragOver}\n              onDragStart={onDragStart}\n              style={{ minWidth: \"250px\", backgroundColor: stage.progress_color_code }}\n            />\n          );\n        })}\n      </div>\n\n      {/* Custom Scrollbar */}\n      <div\n        ref={scrollbarRef}\n        onScroll={syncScroll}\n        style={{\n          height: \"12px\",\n          width: \"100vw\",\n          overflowX: \"auto\",\n          position: \"fixed\",\n          bottom: \"0px\",\n          left: \"0px\",\n          zIndex: \"1000\",\n          background: \"rgba(0, 0, 0, 0.1)\",\n          borderRadius: \"6px\",\n        }}\n      >\n        <div style={{ width: \"200%\", height: \"12px\", background: \"#888\", borderRadius: \"6px\" }}></div>\n      </div>\n\n      {/* Restricted Move Confirmation Modal */}\n      <Modal\n        title=\"Restricted Stage\"\n        open={modalVisible}\n        onOk={() => moveCandidate(pendingCandidate, pendingStatus)}\n        onCancel={() => setModalVisible(false)}\n        okText=\"Yes, Move\"\n        cancelText=\"Cancel\"\n      >\n        This stage is restricted. Are you sure you want to move the candidate?\n      </Modal>\n    </>\n  );\n};\n\nexport default KanbanBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}